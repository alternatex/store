{
    "project": {
        "name": "Store",
        "description": "A lightweight datastore wrapper",
        "version": "1.0.1",
        "url": "http://alternatex.github.io/store/"
    },
    "files": {
        "src/client/store.js": {
            "name": "src/client/store.js",
            "modules": {
                "Client": 1
            },
            "classes": {
                "Store (Client)": 1,
                "Store": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Format/CommonJs.php": {
            "name": "src/server/php/Store/Format/CommonJs.php",
            "modules": {
                "Server": 1
            },
            "classes": {
                "CommonJs": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Format/Csv.php": {
            "name": "src/server/php/Store/Format/Csv.php",
            "modules": {},
            "classes": {
                "Csv": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Format/Json.php": {
            "name": "src/server/php/Store/Format/Json.php",
            "modules": {},
            "classes": {
                "Json": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Format/Object.php": {
            "name": "src/server/php/Store/Format/Object.php",
            "modules": {},
            "classes": {
                "Object": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Repository/Dropbox.php": {
            "name": "src/server/php/Store/Repository/Dropbox.php",
            "modules": {},
            "classes": {
                "Dropbox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Repository/FileSystem.php": {
            "name": "src/server/php/Store/Repository/FileSystem.php",
            "modules": {},
            "classes": {
                "FileSystem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Repository/Memory.php": {
            "name": "src/server/php/Store/Repository/Memory.php",
            "modules": {},
            "classes": {
                "Memory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Resource/File.php": {
            "name": "src/server/php/Store/Resource/File.php",
            "modules": {},
            "classes": {
                "File": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Resource/Item.php": {
            "name": "src/server/php/Store/Resource/Item.php",
            "modules": {},
            "classes": {
                "Item": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Format.php": {
            "name": "src/server/php/Store/Format.php",
            "modules": {},
            "classes": {
                "Format": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Repository.php": {
            "name": "src/server/php/Store/Repository.php",
            "modules": {},
            "classes": {
                "Repository": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Resource.php": {
            "name": "src/server/php/Store/Resource.php",
            "modules": {},
            "classes": {
                "Resource": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Schema.php": {
            "name": "src/server/php/Store/Schema.php",
            "modules": {},
            "classes": {
                "Schema": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/server/php/Store/Store.php": {
            "name": "src/server/php/Store/Store.php",
            "modules": {},
            "classes": {
                "Store (Server)": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Client": {
            "name": "Client",
            "submodules": {},
            "classes": {
                "Store (Client)": 1,
                "Store": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/client/store.js",
            "line": 233,
            "description": "A lightweight datastore wrapper"
        },
        "Server": {
            "name": "Server",
            "submodules": {},
            "classes": {
                "CommonJs": 1,
                "Csv": 1,
                "Json": 1,
                "Object": 1,
                "Dropbox": 1,
                "FileSystem": 1,
                "Memory": 1,
                "File": 1,
                "Item": 1,
                "Format": 1,
                "Repository": 1,
                "Resource": 1,
                "Schema": 1,
                "Store (Server)": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/server/php/Store/Store.php",
            "line": 3,
            "description": "Json Formatted Contents"
        }
    },
    "classes": {
        "Store (Client)": {
            "name": "Store (Client)",
            "shortname": "Store (Client)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Client",
            "namespace": "",
            "file": "src/client/store.js",
            "line": 1,
            "description": "A lightweight datastore wrapper"
        },
        "Store": {
            "name": "Store",
            "shortname": "Store",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Client",
            "namespace": "",
            "file": "src/client/store.js",
            "line": 233,
            "description": "Store consumer",
            "is_constructor": 1
        },
        "CommonJs": {
            "name": "CommonJs",
            "shortname": "CommonJs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Format/CommonJs.php",
            "line": 6,
            "description": "Json Formatted Contents"
        },
        "Csv": {
            "name": "Csv",
            "shortname": "Csv",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Format/Csv.php",
            "line": 6,
            "description": "Csv Formatted Contents"
        },
        "Json": {
            "name": "Json",
            "shortname": "Json",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Format/Json.php",
            "line": 6,
            "description": "Json Formatted Contents"
        },
        "Object": {
            "name": "Object",
            "shortname": "Object",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Format/Object.php",
            "line": 6,
            "description": "Serialized Objects"
        },
        "Dropbox": {
            "name": "Dropbox",
            "shortname": "Dropbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Repository/Dropbox.php",
            "line": 3,
            "description": "Dropbox Repository"
        },
        "FileSystem": {
            "name": "FileSystem",
            "shortname": "FileSystem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Repository/FileSystem.php",
            "line": 9,
            "description": "FileSystem Plaintext Store"
        },
        "Memory": {
            "name": "Memory",
            "shortname": "Memory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Repository/Memory.php",
            "line": 15,
            "description": "Memory Store"
        },
        "File": {
            "name": "File",
            "shortname": "File",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Resource/File.php",
            "line": 8,
            "description": "File\n\n..."
        },
        "Item": {
            "name": "Item",
            "shortname": "Item",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Resource/Item.php",
            "line": 5,
            "description": "Item aka Collection » TBD"
        },
        "Format": {
            "name": "Format",
            "shortname": "Format",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Format.php",
            "line": 5,
            "description": "Format\n\nAbstract format aka content type (encoding/decoding)"
        },
        "Repository": {
            "name": "Repository",
            "shortname": "Repository",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Repository.php",
            "line": 5,
            "description": "Repository"
        },
        "Resource": {
            "name": "Resource",
            "shortname": "Resource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Resource.php",
            "line": 3,
            "description": "Resource"
        },
        "Schema": {
            "name": "Schema",
            "shortname": "Schema",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Schema.php",
            "line": 5,
            "description": "Schema\n\nAbstract format aka content type (encoding/decoding)"
        },
        "Store (Server)": {
            "name": "Store (Server)",
            "shortname": "Store (Server)",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Server",
            "namespace": "",
            "file": "src/server/php/Store/Store.php",
            "line": 3,
            "description": "Store fundamentals"
        }
    },
    "classitems": [
        {
            "file": "src/client/store.js",
            "line": 16,
            "description": "Options (Configuration)",
            "itemtype": "method",
            "name": "Options",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "default": "{Object} instance",
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 26,
            "description": "Options.constructor",
            "itemtype": "method",
            "name": "Options.constructor",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "default": "{Object} instance",
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 36,
            "description": "Remote storage location",
            "itemtype": "property",
            "name": "options.url",
            "type": "{String}",
            "default": "\"//localhost/store/examples/server.php\"",
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 45,
            "description": "Storage namespace",
            "itemtype": "property",
            "name": "options.namespace",
            "type": "{String}",
            "default": "\"default\"",
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 54,
            "description": "JSONP callback fnc name",
            "itemtype": "property",
            "name": "options.jsonp",
            "type": "{String}",
            "default": "\"callback\"",
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 63,
            "description": "Cache enabled",
            "itemtype": "property",
            "name": "options.cache",
            "type": "{Boolean}",
            "default": "true",
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 72,
            "description": "Cache Lifetime",
            "itemtype": "property",
            "name": "options.ttl",
            "type": "{Number}",
            "default": "3600",
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 82,
            "description": "Repository",
            "itemtype": "method",
            "name": "Repository",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "default": "{Object} instance",
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 92,
            "description": "Repository constructor",
            "itemtype": "method",
            "name": "Repository.constructor",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "default": "{Object} instance",
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 102,
            "description": "Repository.Remote",
            "itemtype": "method",
            "name": "Remote",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "default": "{Object} instance",
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 112,
            "description": "Repository.Remote.constructor",
            "itemtype": "method",
            "name": "Remote.constructor",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "default": "{Object} instance",
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 122,
            "description": "Synchronous remote action processing",
            "itemtype": "method",
            "name": "processSync",
            "params": [
                {
                    "name": "action",
                    "description": "[list, get, update, remove]",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "configuration",
                    "type": "Object"
                },
                {
                    "name": "item",
                    "description": "arbitrary object *",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "handle",
                    "type": "Function"
                },
                {
                    "name": "each",
                    "description": "apply callback fnc for each object? (default: false)",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 136,
            "description": "Asynchronous remote action processing",
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "action",
                    "description": "[list, get, update, remove]",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "configuration",
                    "type": "Object"
                },
                {
                    "name": "item",
                    "description": "arbitrary object *",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "handle",
                    "type": "Function"
                },
                {
                    "name": "each",
                    "description": "apply callback fnc for each object? (default: false)",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store (Client)",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 240,
            "description": "Self-Reference",
            "itemtype": "property",
            "name": "self",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 249,
            "description": "Store configuration",
            "itemtype": "property",
            "name": "options",
            "type": "{Object}",
            "default": "{}",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 258,
            "description": "Configuration options",
            "itemtype": "property",
            "name": "options",
            "access": "public",
            "tagname": "",
            "type": "{Object}",
            "default": "{}",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 268,
            "description": "Repository",
            "itemtype": "property",
            "name": "repository",
            "access": "private",
            "tagname": "",
            "type": "{Repository}",
            "default": "new Remote()",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 278,
            "description": "Repository Item",
            "itemtype": "property",
            "name": "Item",
            "access": "private",
            "tagname": "",
            "type": "{Function}",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 292,
            "description": "Item.constructor",
            "itemtype": "property",
            "name": "Item.constructor",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 301,
            "description": "Store-Reference",
            "itemtype": "property",
            "name": "datastore",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 310,
            "description": "Object's Datastore",
            "itemtype": "property",
            "name": "data",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 319,
            "description": "Set item property",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "property",
                    "description": "key",
                    "type": "String"
                },
                {
                    "name": "property",
                    "description": "value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 335,
            "description": "Get item property",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "property",
                    "description": "key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 346,
            "description": "Persist item",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "callback",
                    "description": "*",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 357,
            "description": "Remove item",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "callback",
                    "description": "*",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 370,
            "description": "Retrieves all items",
            "itemtype": "method",
            "name": "all",
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 384,
            "description": "Interface *",
            "itemtype": "property",
            "name": "api",
            "access": "private",
            "tagname": "",
            "type": "{Object}",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 408,
            "description": "Store prototype definition",
            "itemtype": "property",
            "name": "prototype",
            "type": "{Object}",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 416,
            "description": "LRU cache * - TODO: implement",
            "itemtype": "property",
            "name": "cache",
            "type": "{Object}",
            "default": "{}",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 425,
            "description": "Items collection",
            "itemtype": "property",
            "name": "items",
            "type": "{Array}",
            "default": "[]",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 434,
            "description": "JSON Schema *",
            "itemtype": "property",
            "name": "schema",
            "type": "{Object}",
            "default": "null",
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 443,
            "description": "Insert/update item",
            "itemtype": "method",
            "name": "update",
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 455,
            "description": "Remove item",
            "itemtype": "method",
            "name": "remove",
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 465,
            "description": "Retrieve item",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "|",
                    "description": "{String} item object reference or string uuid",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 476,
            "description": "Retrieves all items",
            "itemtype": "method",
            "name": "list",
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 486,
            "description": "Filter list - TODO: implement",
            "itemtype": "method",
            "name": "filter",
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 496,
            "description": "Instance configuration",
            "itemtype": "method",
            "name": "configure",
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 509,
            "description": "Item accessor *",
            "itemtype": "method",
            "name": "item",
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 519,
            "description": "Create instance / new item (bound to datastore)",
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 542,
            "description": "JSON schema getter/setter",
            "itemtype": "method",
            "name": "schema",
            "return": {
                "description": "object",
                "type": "Object"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 557,
            "description": "Apply general options - default / fallback",
            "itemtype": "method",
            "name": "__configure",
            "params": [
                {
                    "name": "options",
                    "description": "A configure object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 569,
            "description": "one-dimensional object merge *",
            "itemtype": "method",
            "name": "extend",
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 582,
            "description": "Passthrough if item is object. If type is string » wrapped into Item instance with id set to `item`",
            "itemtype": "method",
            "name": "wrap",
            "params": [
                {
                    "name": "{String}",
                    "description": "item Instance or UUID",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns item object",
                "type": "Object"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 598,
            "description": "Generate GUID",
            "itemtype": "method",
            "name": "guid",
            "params": [
                {
                    "name": "separator",
                    "description": "(defaults to dash)"
                }
            ],
            "return": {
                "description": "GUID",
                "type": "String"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 616,
            "description": "Convenience iteration helper",
            "itemtype": "method",
            "name": "times",
            "params": [
                {
                    "name": "times",
                    "description": "",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "GUID",
                "type": "String"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 629,
            "description": "Convenience deferred wrapper",
            "itemtype": "method",
            "name": "times",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/client/store.js",
            "line": 640,
            "description": "Stringify object structure (deep!) into url",
            "example": [
                " (borrowed from: http://stackoverflow.com/a/9472534)\n\n// helpers\nvar serialized,\n    data = {a: 1, b: 2, c: {d: 4, e: [6, 7, 8], f: {asdf: 10}}};  \n\n// transform\nserialized = Store.serialize(data);\n\n// verify\nconsole.log(serialized, serialized === \"a=1&b=2&c[d]=4&c[e][0]=6&c[e][1]=7&c[e][2]=8&c[f][asdf]=10\");"
            ],
            "itemtype": "method",
            "name": "serialize",
            "params": [
                {
                    "name": "params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Store",
            "module": "Client"
        },
        {
            "file": "src/server/php/Store/Format/CommonJs.php",
            "line": 14,
            "description": "File extension",
            "itemtype": "property",
            "name": "",
            "final": "",
            "type": "{String}",
            "class": "CommonJs",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format/CommonJs.php",
            "line": 22,
            "description": "Encode to format",
            "itemtype": "method",
            "name": "encode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "CommonJs",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format/CommonJs.php",
            "line": 43,
            "description": "Decode from format",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "CommonJs",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format/Csv.php",
            "line": 14,
            "description": "File extension",
            "itemtype": "property",
            "name": "",
            "final": "",
            "type": "{String}",
            "class": "Csv",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format/Csv.php",
            "line": 22,
            "description": "Encode to format",
            "itemtype": "method",
            "name": "encode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Csv",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format/Csv.php",
            "line": 33,
            "description": "Decode from format",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Csv",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format/Json.php",
            "line": 14,
            "description": "File extension",
            "itemtype": "property",
            "name": "",
            "final": "",
            "type": "{String}",
            "class": "Json",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format/Json.php",
            "line": 22,
            "description": "Encode to format",
            "itemtype": "method",
            "name": "encode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Json",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format/Json.php",
            "line": 33,
            "description": "Decode from format",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Json",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format/Object.php",
            "line": 14,
            "description": "File extension",
            "itemtype": "property",
            "name": "",
            "final": "",
            "type": "{String}",
            "class": "Object",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format/Object.php",
            "line": 22,
            "description": "Encode to format",
            "itemtype": "method",
            "name": "encode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Object",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format/Object.php",
            "line": 33,
            "description": "Decode from format",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Object",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/FileSystem.php",
            "line": 17,
            "description": "Load repository",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "$filepath",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "FileSystem",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/FileSystem.php",
            "line": 28,
            "description": "Insert or update item data in filepath",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "$item",
                    "description": "what it's about",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "FileSystem",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/FileSystem.php",
            "line": 39,
            "description": "Removes an item from filepath",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "$item",
                    "description": "what it's about",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "FileSystem",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/FileSystem.php",
            "line": 50,
            "description": "Get item data",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "$item",
                    "description": "what it's about",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "item instance",
                "type": "Object"
            },
            "class": "FileSystem",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/FileSystem.php",
            "line": 61,
            "description": "Persist data",
            "itemtype": "method",
            "name": "persist",
            "params": [
                {
                    "name": "filepath",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "contents",
                    "description": "",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "FileSystem",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/FileSystem.php",
            "line": 75,
            "description": "Persist data static",
            "itemtype": "method",
            "name": "persistToDisk",
            "params": [
                {
                    "name": "filepath",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "contents",
                    "description": "",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "FileSystem",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/Memory.php",
            "line": 27,
            "description": "Encode to format",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Memory",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/Memory.php",
            "line": 39,
            "description": "Decode from format",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Memory",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/Memory.php",
            "line": 51,
            "description": "Load repository",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "$DSN",
                    "description": "",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Memory",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/Memory.php",
            "line": 84,
            "description": "Insert or update item data in datastore",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "$item",
                    "description": "what it's about",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Memory",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/Memory.php",
            "line": 122,
            "description": "Removes an item from datastore",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "$item",
                    "description": "what it's about",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Memory",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/Memory.php",
            "line": 138,
            "description": "Get item data",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "$item",
                    "description": "what it's about",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "item instance",
                "type": "Object"
            },
            "class": "Memory",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/Memory.php",
            "line": 157,
            "description": "Find item (currently just: UUID - TODO: enhance signature w/UUID as default / Widespread Merge ?!)",
            "itemtype": "method",
            "name": "find",
            "return": {
                "description": "List of item instances",
                "type": "Array"
            },
            "class": "Memory",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/Memory.php",
            "line": 177,
            "description": "Filter items",
            "itemtype": "method",
            "name": "find",
            "return": {
                "description": "List of matching item instances",
                "type": "Array"
            },
            "class": "Memory",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/Memory.php",
            "line": 188,
            "description": "Process HTTP file uploads",
            "itemtype": "method",
            "name": "files",
            "params": [
                {
                    "name": "$files",
                    "description": "actually just $_FILES ...",
                    "type": "Object"
                }
            ],
            "void": "",
            "class": "Memory",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository/Memory.php",
            "line": 213,
            "description": "Persist data",
            "itemtype": "method",
            "name": "persist",
            "params": [
                {
                    "name": "filepath",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "contents",
                    "description": "",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Memory",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Resource/File.php",
            "line": 18,
            "description": "Path to file",
            "itemtype": "property",
            "name": "path",
            "access": "private",
            "tagname": "",
            "type": "{String}",
            "default": "''",
            "class": "File",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Resource/File.php",
            "line": 27,
            "description": "File content",
            "itemtype": "property",
            "name": "content",
            "access": "private",
            "tagname": "",
            "type": "{String}",
            "default": "''",
            "class": "File",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Resource/File.php",
            "line": 36,
            "description": "File format",
            "itemtype": "property",
            "name": "format",
            "access": "private",
            "tagname": "",
            "type": "{Format}",
            "default": "null",
            "class": "File",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format.php",
            "line": 15,
            "description": "Encode to format",
            "itemtype": "method",
            "name": "encode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Format",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Format.php",
            "line": 24,
            "description": "Decode from format",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Format",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository.php",
            "line": 13,
            "description": "Insert or update item data in datastore",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "$item",
                    "description": "what it's about",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Repository",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository.php",
            "line": 22,
            "description": "Get item data",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "$item",
                    "description": "what it's about",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "item instance",
                "type": "Object"
            },
            "class": "Repository",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository.php",
            "line": 31,
            "description": "Removes an item from datastore",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "$item",
                    "description": "what it's about",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns true on success",
                "type": "Boolean"
            },
            "class": "Repository",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository.php",
            "line": 40,
            "description": "Load data",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "dsn",
                    "description": "",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Repository",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository.php",
            "line": 49,
            "description": "Persist data",
            "itemtype": "method",
            "name": "persist",
            "params": [
                {
                    "name": "dsn",
                    "description": "",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Repository",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository.php",
            "line": 58,
            "description": "Get/Set pending changes flag",
            "itemtype": "method",
            "name": "isPending",
            "params": [
                {
                    "name": "$pending",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Repository",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Repository.php",
            "line": 70,
            "description": "Mirror store actions *",
            "itemtype": "method",
            "name": "mirror",
            "void": "",
            "class": "Repository",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Resource.php",
            "line": 10,
            "description": "Data",
            "itemtype": "property",
            "name": "data",
            "access": "private",
            "tagname": "",
            "type": "{Array}",
            "default": "''",
            "class": "Resource",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Schema.php",
            "line": 15,
            "description": "Encode to format",
            "itemtype": "method",
            "name": "encode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Schema",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Schema.php",
            "line": 24,
            "description": "Decode from format",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "$datastore",
                    "description": "context identifier",
                    "type": "String"
                }
            ],
            "void": "",
            "class": "Schema",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 11,
            "description": "Flag to indicated pending changes",
            "itemtype": "property",
            "name": "data",
            "access": "protected",
            "tagname": "",
            "type": "{Boolean}",
            "default": "false",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 20,
            "description": "Items collection",
            "itemtype": "property",
            "name": "data",
            "access": "protected",
            "tagname": "",
            "type": "{Array}",
            "default": "array()",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 29,
            "description": "Datastore filename",
            "itemtype": "property",
            "name": "datastore",
            "access": "protected",
            "tagname": "",
            "type": "{String}",
            "default": "null",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 38,
            "description": "HTTP Header storage type indicator",
            "itemtype": "property",
            "name": "REQUEST_STORE_TYPE_HEADER_FIELD",
            "access": "public",
            "tagname": "",
            "type": "{String}",
            "default": "x-storage-type",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 48,
            "description": "Toggle JSONP",
            "itemtype": "property",
            "name": "RESPONSE_JSONP_ENABLED",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 58,
            "description": "JSON callback identifier",
            "itemtype": "property",
            "name": "RESPONSE_JSONP_CALLBACK",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 68,
            "description": "Entity attribute count",
            "itemtype": "property",
            "name": "ENTITY_COUNT",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 78,
            "description": "Entity attribute id",
            "itemtype": "property",
            "name": "ENTITY_IDENTIFIER",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 88,
            "description": "l18n datastore.corrupt",
            "itemtype": "property",
            "name": "MESSAGE_ERROR_DATASTORE_CORRUPT",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 98,
            "description": "l18n datastore.locked",
            "itemtype": "property",
            "name": "MESSAGE_ERROR_DATASTORE_LOCKED",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 108,
            "description": "Request param action",
            "itemtype": "property",
            "name": "REQUEST_ACTION",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 118,
            "description": "Request param namespace",
            "itemtype": "property",
            "name": "REQUEST_NAMESPACE",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 128,
            "description": "Request param instance",
            "itemtype": "property",
            "name": "REQUEST_DATA",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 138,
            "description": "Request param jsonp",
            "itemtype": "property",
            "name": "REQUEST_JSONP",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 148,
            "description": "Error *",
            "itemtype": "property",
            "name": "RESPONSE_ERROR",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 158,
            "description": "Action `get`",
            "itemtype": "property",
            "name": "STORE_ACTION_GET",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 168,
            "description": "Action `list`",
            "itemtype": "property",
            "name": "STORE_ACTION_LIST",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 178,
            "description": "Action `remove`",
            "itemtype": "property",
            "name": "STORE_ACTION_REMOVE",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 188,
            "description": "Action `update`",
            "itemtype": "property",
            "name": "STORE_ACTION_UPDATE",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 198,
            "description": "Request fileupload param source",
            "itemtype": "property",
            "name": "TRANSFER_SOURCE",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        },
        {
            "file": "src/server/php/Store/Store.php",
            "line": 208,
            "description": "Request fileupload param name",
            "itemtype": "property",
            "name": "TRANSFER_TARGET",
            "access": "public",
            "tagname": "",
            "type": "{Boolean}",
            "default": "true",
            "readonly": "",
            "class": "Store (Server)",
            "module": "Server"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Format/CommonJs.php:22"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Format/CommonJs.php:43"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Format/Csv.php:22"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Format/Csv.php:33"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Format/Json.php:22"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Format/Json.php:33"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Format/Object.php:22"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Format/Object.php:33"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Repository/FileSystem.php:17"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Repository/FileSystem.php:61"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Repository/FileSystem.php:75"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Repository/Memory.php:27"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Repository/Memory.php:39"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Repository/Memory.php:51"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Repository/Memory.php:188"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Repository/Memory.php:213"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Format.php:15"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Format.php:24"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Repository.php:40"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Repository.php:49"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Repository.php:70"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Schema.php:15"
        },
        {
            "message": "unknown tag: void",
            "line": " src/server/php/Store/Schema.php:24"
        }
    ]
}