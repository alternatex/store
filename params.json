{"name":"Store","tagline":"A rapid prototype development utility  ","body":"\r\nOverview\r\n-------------\r\n\r\nStore esentially provides CRUD storage operations for arbitrary objects. Operations are implementend in an asynchronous fashion with custom deferred objects to handle postponed code execution.\r\n\r\nUsage Examples\r\n-------------\r\n\r\n### JavaScript\r\n\r\n```html\r\n<script src=\"src/store.js\"></script>\r\n<script>\r\n\r\n// scope\r\n(function(root){\r\n\r\n  // setup general\r\n  Store.config({ \r\n    url: \"http://localhost/datastore.php\", // server side handler *\r\n    ttl: 1000 // timeout in ms\r\n  });\r\n\r\n  // create some stores\r\n  ['author', 'article', 'magazine', 'publisher'].forEach(\r\n    function(context){\r\n      root[context+'Datastore'] = new Store({ namespace: context });\r\n    }\r\n  );\r\n\r\n  // create 10 articles\r\n  Store.times(10, function(count){\r\n\r\n    // create & store\r\n    articleStore.create({ \r\n      \r\n      // article\r\n      title: 'No.' + i,       \r\n      abstract: 'Lorem Ipsum [...]',       \r\n      text: 'Lorem Ipsum Si Amet They Say',             \r\n      \r\n      // history \r\n      author: 'me', \r\n      lastmod: new Date().getTime()\r\n    }).update();\r\n\r\n  });\r\n\r\n  // fetch all articles (10)\r\n  var articles = articleStore.list();\r\n\r\n  // register callback \r\n  Store.when(articles).done(function(articles){\r\n\r\n    // do stuff\r\n    articles.forEach(fucuntion(article, index){\r\n      console.log(index, article);\r\n    });\r\n\r\n  });\r\n\r\n  // fetch article \r\n  var article = articleStore.get(\"UUID\");\r\n\r\n  // remove article\r\n  article.remove();\r\n\r\n  // ...\r\n\r\n})(this);\r\n</script>\r\n```\r\n\r\n### Underscore.js Templating\r\n\r\n```html\r\n<form method=\"POST\" action=\"datastore.php\">\r\n  <input type=\"hidden\" name=\"namespace\" value=\"articles\"/>\r\n  <input type=\"hidden\" name=\"instance[id]\" value=\"<%= instance.id %>\"/>\r\n  <input type=\"text\" name=\"instance[firstname]\" value=\"firstname\"/>\r\n  <input type=\"text\" name=\"instance[lastname]\" value=\"lastname\"/>\r\n  <button data-action=\"remove\">Remove</button>\r\n  <button data-action=\"update\">Update</button>\r\n</form>\r\n```\r\n\r\n### HTML File Uploads\r\n\r\n```html\r\n<form method=\"POST\" action=\"datastore.php\" enctype=\"multipart/form-data\">\r\n  <input type=\"hidden\" name=\"namespace\" value=\"articles\"/>\r\n  <input type=\"hidden\" name=\"instance[id]\" value=\"<%= instance.id %>\"/>\r\n  <input type=\"file\" name=\"instance[document]\" />\r\n  <input type=\"file\" name=\"instance[audio]\" />\r\n  <input type=\"file\" name=\"instance[video]\" />\r\n  <input type=\"file\" name=\"instance[image]\" />\r\n  <button data-action=\"remove\">Remove</button>\r\n  <button data-action=\"update\">Update</button>\r\n</form>\r\n```\r\n\r\n### Ajax File Uploads\r\n\r\n```html\r\n<script>\r\n  // ...\r\n</script>\r\n```\r\n\r\nDocumentation\r\n-------------\r\n- Client\r\n- Server\r\n  - JS\r\n  - PHP\r\n\r\nRoadmap\r\n-------------\r\n- Docs\r\n- Test Coverage++\r\n- AMD/CommonJS\r\n- Localstorage (TTL)\r\n- JSON Schemas\r\n- Underscore.js Templating\r\n\r\nLicense\r\n-------------\r\nReleased under two licenses: new BSD, and MIT. You may pick the\r\nlicense that best suits your development needs.\r\n\r\nhttps://raw.github.com/alternatex/store/master/LICENSE","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}