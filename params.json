{"name":"Store","tagline":"A lightweight datastore wrapper","body":"Index\r\n-------------\r\n* [Quickstart](#quickstart)\r\n  * [Embedding](#embedding)\r\n  * [Defaults](#defaults)\r\n  * [Create Store](#create-store)\r\n  * [Create Object](#create-object)\r\n  * [Store Object](#store-object)\r\n  * [Remove Object](#remove-object)\r\n  * [Summary](#summary)\r\n* [Repositories](#repositories)\r\n* [Limitations](#limitations)\r\n* [Documentation](#documentation)\r\n* [Roadmap](#roadmap)\r\n* [License](#license)\r\n\r\nQuickstart\r\n-------------\r\n\r\n### Embedding\r\n```html\r\n<script src=\"src/client/store.js\"></script>\r\n<script>\r\n// scope\r\n(function(root){\r\n  // ...\r\n});\r\n</script>\r\n```\r\n\r\n### Defaults\r\n```javascript\r\nStore.configure({ \r\n  url: \"http://localhost/datastore.php\", \r\n  ttl: 36000\r\n});\r\n```\r\n\r\n### Create Store\r\n```javascript\r\nvar objectStore = new Store({ namespace: 'object' });\r\n```\r\n\r\n### Create Object\r\n\r\n#### Variant A\r\n```javascript\r\nvar object = objectStore.create({ \r\n  country: 'USA', \r\n  firstname: 'Stephen', \r\n  lastname: 'Colbert' \r\n}); \r\n```\r\n\r\n#### Variant B \r\n```javascript\r\nvar object = objectStore.create(); \r\nobject.set('country', 'USA');\r\nobject.set('firstname', 'John'); \r\nobject.set('lastname', 'Stewart'); \r\n```\r\n\r\n### Store Object\r\n\r\n#### Variant A\r\n```javascript\r\nobject.update();\r\n```\r\n\r\n#### Variant B\r\n```javascript\r\nobjectStore.update(object);\r\n```\r\n\r\n#### Variant C\r\n```javascript\r\nobjectStore.update({ name: 'XXXXX', type: 'XXXXX', rank: 'XXXXX' });\r\n```\r\n\r\n### Remove Object\r\n\r\n#### Variant A\r\n```javascript\r\nobject.remove();\r\n```\r\n\r\n#### Variant B\r\n```javascript\r\nobjectStore.remove(object);\r\n```\r\n\r\n### Summary\r\n```html\r\n<script src=\"src/client/store.js\"></script>\r\n<script>\r\n(function(root){\r\n\r\n  // local variables\r\n  var objectStore, objects, object;\r\n\r\n  // configure storage defaults \r\n  Store.configure({ \r\n    url: \"http://localhost/datastore.php\", \r\n    ttl: 36000\r\n  });\r\n\r\n  // create new storage\r\n  objectStore = new Store({ namespace: 'object' });\r\n\r\n  // create new storage bound object\r\n  object = objectStore.create({ \r\n    country: 'US', \r\n    firstname: 'Stephen', \r\n    lastname: 'Colbert' \r\n  });\r\n  \r\n  // insert object\r\n  object = object.update();\r\n\r\n  // update on insert\r\n  Store.when(object).done(function(object){\r\n  \r\n    // update properties\r\n    object.set('firstname', 'John');\r\n    object.set('lastname', 'Stewart');\r\n\r\n    // update object\r\n    object.update();\r\n\r\n  });\r\n\r\n  // collect update promises\r\n  objects = [];\r\n\r\n  // create some objects\r\n  Store.times(10, function(count){\r\n    objects.push(objectStore.create({ \r\n      title: 'No.' + count,       \r\n      abstract: 'Lorem Ipsum [...]',       \r\n      text: 'Lorem Ipsum Si Amet They Say',             \r\n      author: 'me', \r\n      lastmod: new Date().getTime()\r\n    }).update());\r\n  });\r\n\r\n  // upon promises fulfillment\r\n  Store.when(objects)\r\n    .done(function(){})\r\n    .fail(function(){})\r\n    .always(function(){});  \r\n\r\n  // fetch all objects & register callback \r\n  objects = objectStore.list();\r\n\r\n  // process fetched objects\r\n  Store.when(objects).done(function(objects){\r\n    objects.forEach(function(object, index){\r\n      console.log(index, object);\r\n    });\r\n  });\r\n\r\n  // fetch object \r\n  object = objectStore.get('8c0c1ff0-d0fe-38b7-376a-b0b1d53bd557');\r\n\r\n  // process fetched object\r\n  Store.when(object).done(function(object){\r\n    console.log(\"object\", object);\r\n  });\r\n});\r\n</script>\r\n```\r\n\r\n#### Files\r\n\r\n```html\r\n<script>\r\n  // create container\r\n  var form = new FormData();\r\n   \r\n  // configure\r\n  form.append('namespace', 'object');\r\n  form.append('action', 'update');  \r\n\r\n  // attach file\r\n  form.append('instance[document]', new Blob(['<file>...</file>'], { type: 'text/xml' }));\r\n   \r\n  // store\r\n  var request = new XMLHttpRequest();\r\n  request.open('POST', 'http://localhost/datastore.php');\r\n  request.send(form);\r\n</script>\r\n```\r\n\r\n### HTML\r\n\r\n#### Arbitrary Objects\r\n\r\n```html\r\n<form method=\"POST\" action=\"datastore.php\">\r\n  <input type=\"hidden\" name=\"instance[id]\" value=\"a5b1da03-c0d1-5f49-19e4-de94bb266d2e\"/>\r\n  <input type=\"hidden\" name=\"namespace\" value=\"object\"/>\r\n  <input type=\"text\" name=\"instance[firstname]\" value=\"firstname\"/>\r\n  <input type=\"text\" name=\"instance[lastname]\" value=\"lastname\"/>\r\n  <input type=\"submit\" name=\"action\" value=\"update\"/>\r\n  <input type=\"submit\" name=\"action\" value=\"remove\"/>\r\n  <input type=\"submit\" name=\"action\" value=\"cancel\"/>\r\n</form>\r\n```\r\n\r\n#### Files\r\n\r\n```html\r\n<form method=\"POST\" action=\"datastore.php\" enctype=\"multipart/form-data\">\r\n  <input type=\"hidden\" name=\"instance[id]\" value=\"55ff1e53-0bab-f317-d1d2-7e119fce405e9\"/>\r\n  <input type=\"hidden\" name=\"namespace\" value=\"object\"/>\r\n  <input type=\"file\" name=\"instance[document]\" />\r\n  <input type=\"file\" name=\"instance[audio]\" />\r\n  <input type=\"file\" name=\"instance[video]\" />\r\n  <input type=\"file\" name=\"instance[image]\" />\r\n  <input type=\"submit\" name=\"action\" value=\"update\"/>\r\n  <input type=\"submit\" name=\"action\" value=\"remove\"/>\r\n  <input type=\"submit\" name=\"action\" value=\"cancel\"/>\r\n</form>\r\n```\r\n\r\nRepositories\r\n-------------\r\n\r\n### PHP\r\n\r\nSerialized object storage with embedded file support.\r\n\r\nLimitations\r\n-------------\r\n...\r\n\r\nDocumentation\r\n-------------\r\nSee [here](https://github.com/alternatex/store/blob/master/docs/index.md)\r\n\r\nRoadmap\r\n-------------\r\n- Documentation / Test Coverage\r\n- AMD/CommonJS\r\n- Abstract Adapters/Stores/Repositories\r\n  - Remote\r\n      - PHP\r\n      - Node.js\r\n  - Local\r\n      - Lawnchair\r\n      - WebSQL \r\n      - Localstorage\r\n- Caching (TTL)\r\n- JSON Schema Support\r\n- REST Support for Client and PHP-Adapter\r\n- Templating Examples Handlebars/Underscore.js/VanillaJS?\r\n\r\nLicense\r\n-------------\r\nReleased under two licenses: new BSD, and MIT. You may pick the\r\nlicense that best suits your development needs.\r\n\r\nhttps://raw.github.com/alternatex/store/master/LICENSE","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}